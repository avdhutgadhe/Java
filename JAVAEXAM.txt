Problem 1 : Accelerate the Car (20 Marks)


class Car{
	private int year;
	private String make;
	private double speed;

Car(int year, String make, double speed){
	this.year = year;
	this.make = make;
	this.speed = speed;
}
public int getyear(){
	return this.year;
}
public String getmake(){
	return this.make;
}
public double getspeed(){
	return this.speed;
}

void accelerate(){
	this.speed= this.speed + 1;
}
}







class RaceTrack{
	public static void main(String args[])
	{
		Car c1 = new Car(2010,"Porsche",25.0);
		System.out.println(c1.getyear()+ "  "+c1.getmake()+" "+c1.getspeed());
		c1.accelerate();
		System.out.println(c1.getspeed());
	}
}


Output-------

C:\Users\ASUS\Desktop\exam>java RaceTrack
2010  Porsche 25.0
26.0







Problem 2 : 




import java.util.*;
class Item{
	Integer itemId;
	String itemName;
	
	Item(int itemId, String itemName){
		this.itemId = itemId;
		this.itemName = itemName;
	}
	public Integer getId(){
		return this.itemId;
	}
	public String getitemName(){
		return this.itemName;
	}
	
	@Override
	public String toString()
	{
		return this.itemId+ " "+this.itemName;
	}
	
	@Override
	public boolean equals(Object o)
	{
		if (o instanceof Item){
			Item temp = (Item)o;
			if(this.itemId.equals(temp.itemId) && this.itemName.equals(temp.itemName)){
				return true;
			}
			return false;
		}
	}
	
class idsort implements Comparator<Item>
{
	public int compare(Item i1, Item i2){
	return i1.getId().comparareTo(i2.GetId());
	}
}
	
class namesort implements Comparator<Item>
{
	public int compare(Item i1, Item i2){
	return i1.getName().comparareTo(i2.GetName());
	}
}
class ItemDemo{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		
		ArrayList<Item> inv = new ArrayList<Item>();
		
		while(true)
		{
			System.out.println("Please enter your choice (1-4)");
			System.out.println("1. Add item");
			System.out.println("2. Display");
			System.out.println("3. Remove");
			System.out.println("4. Exit");
			
			int choice = sc.nextInt();
			if (choice == 1){
				System.out.println("Enter item id and item name seperated by space");
				int itemId = sc.nextInt();
				Item ob = new Item (itemId, itemName);
				if (!inv.contains(ob))
				{
					inv.add(ob);
				}
			}
			else if (choice == 2)
			{
				idSort is = new idSort();
				Collection.sort(inv, ns);
	            System.out.println("id sorted list : "+ inv);	
				
				nameSort is = new nameSort();
				Collection.sort(inv, ns);
	            System.out.println("Name sorted list : "+ inv);	
				
			}
			
			
				else if (choice == 3)
			{
	            System.out.println("Enter item to be removed");	
				System.out.println("Enter item id and item name seperated by space");
				int itemId = sc.next();
				String itemName = sc.next();
				Item obv = new Item(itemId, itemName);
				if
				{
					(inv.contains(obv2));
					inv.remove(obv2);
				}
				else
					System.out.println("Item not found");
			}
			else if (choice == 4);
			{
				break;
			}
			else 
				System.out.println("Invalid choice");
		}
	}
	
			
				
}
	



OUTPUT

Please enter your choice (1-4)
1. Add item
2. Display
3. Remove
4. Exit
_____________________________________
1
Enter item id and item name separated by space.
101 ABC , 102 DEF
		